{"ast":null,"code":"var _jsxFileName = \"/Users/uduthurishruthika/Desktop/SE03/meal-planning/meal-planning-frontend/src/components/MealPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealPlanner = () => {\n  _s();\n  const location = useLocation();\n  const {\n    recipe,\n    selectedDate,\n    mealType\n  } = location.state || {};\n  const [date, setDate] = useState(new Date());\n  const [recipes, setRecipes] = useState({});\n  const [newRecipe, setNewRecipe] = useState('');\n  const displayDate = selectedDate ? new Date(selectedDate) : date;\n\n  // Load recipes from local storage on component mount\n  useEffect(() => {\n    const savedRecipes = JSON.parse(localStorage.getItem('recipes')) || {};\n    setRecipes(savedRecipes);\n  }, []);\n\n  // Save recipes to local storage whenever they change\n  useEffect(() => {\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n  }, [recipes]);\n  const onDateChange = newDate => {\n    setDate(newDate);\n  };\n  const deleteRecipe = date => {\n    const updatedRecipes = {\n      ...recipes\n    };\n    delete updatedRecipes[date];\n    setRecipes(updatedRecipes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meal Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onDateChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(recipes).map(key => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [key, \": \", recipes[key], recipe && selectedDate && mealType && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Received from RecipeDetail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Recipe Name: \", recipe.Name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Selected Date: \", displayDate.toDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Meal Type: \", mealType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", recipe.Description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Cook Time: \", recipe.CookTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Prep Time: \", recipe.PrepTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total Time: \", recipe.TotalTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Calories: \", recipe.Calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteRecipe(key),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(MealPlanner, \"HziGnJCqnFMokN2Q0cxHZEypoLY=\", false, function () {\n  return [useLocation];\n});\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","useLocation","jsxDEV","_jsxDEV","MealPlanner","_s","location","recipe","selectedDate","mealType","state","date","setDate","Date","recipes","setRecipes","newRecipe","setNewRecipe","displayDate","savedRecipes","JSON","parse","localStorage","getItem","setItem","stringify","onDateChange","newDate","deleteRecipe","updatedRecipes","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","Object","keys","map","key","Name","toDateString","Description","CookTime","PrepTime","TotalTime","Calories","onClick","_c","$RefreshReg$"],"sources":["/Users/uduthurishruthika/Desktop/SE03/meal-planning/meal-planning-frontend/src/components/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport { useLocation } from 'react-router-dom';\n\nconst MealPlanner = () => {\n    const location = useLocation();\n    const { recipe, selectedDate, mealType } = location.state || {};\n    const [date, setDate] = useState(new Date());\n    const [recipes, setRecipes] = useState({});\n    const [newRecipe, setNewRecipe] = useState('');\n\n    const displayDate = selectedDate ? new Date(selectedDate) : date;\n\n    // Load recipes from local storage on component mount\n    useEffect(() => {\n        const savedRecipes = JSON.parse(localStorage.getItem('recipes')) || {};\n        setRecipes(savedRecipes);\n    }, []);\n\n    // Save recipes to local storage whenever they change\n    useEffect(() => {\n        localStorage.setItem('recipes', JSON.stringify(recipes));\n    }, [recipes]);\n\n\n    const onDateChange = (newDate) => {\n        setDate(newDate);\n    };\n\n    const deleteRecipe = (date) => {\n        const updatedRecipes = { ...recipes };\n        delete updatedRecipes[date];\n        setRecipes(updatedRecipes);\n    };\n\n    return (\n        <div>\n            <h1>Meal Planner</h1>\n            <Calendar onChange={onDateChange} value={date} />\n            <div>\n                <h2>Recipes</h2>\n                <ul>\n                    {Object.keys(recipes).map((key) => (\n                        <li key={key}>\n                            {key}: {recipes[key]}\n                            {recipe && selectedDate && mealType && (\n                                <div>\n                                    <h2>Received from RecipeDetail</h2>\n                                    <p>Recipe Name: {recipe.Name}</p>\n                                    <p>Selected Date: {displayDate.toDateString()}</p>\n                                    <p>Meal Type: {mealType}</p>\n                                    <p>Description: {recipe.Description}</p>\n                                    <p>Cook Time: {recipe.CookTime}</p>\n                                    <p>Prep Time: {recipe.PrepTime}</p>\n                                    <p>Total Time: {recipe.TotalTime}</p>\n                                    <p>Calories: {recipe.Calories}</p>\n                                    {/* Add more fields as needed */}\n                                </div>\n                            )}\n                            <button onClick={() => deleteRecipe(key)}>Delete</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n    \n};\n\nexport default MealPlanner;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}