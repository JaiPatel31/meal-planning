{"ast":null,"code":"// RecipeDetail.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { DatePicker, Select, Modal, Button } from 'antd';\n\n// const RecipeDetail = () => {\n//   const { id } = useParams(); // Get the recipe ID from the URL\n//   const [recipe, setRecipe] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchRecipe = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5001/api/recipes/${id}`); // Using the ObjectID in the request\n//         setRecipe(response.data); // Set the recipe data in state\n//       } catch (error) {\n//         console.error('Error fetching recipe:', error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRecipe();\n//   }, [id]);\n\n//   if (loading) return <div>Loading...</div>; // Show loading indicator while fetching\n\n//   if (!recipe) return <div>Recipe not found.</div>; // Handle case where recipe isn't found\n\n//   return (\n//     <div>\n//       <h1>{recipe.Name}</h1>\n//       <p><strong>Description:</strong> {recipe.Description}</p>\n//       <p><strong>Cook Time:</strong> {recipe.CookTime}</p>\n//       <p><strong>Prep Time:</strong> {recipe.PrepTime}</p>\n//       <p><strong>Total Time:</strong> {recipe.TotalTime}</p>\n//       <p><strong>Servings:</strong> {recipe.RecipeServings}</p>\n//       <p><strong>Calories:</strong> {recipe.Calories}</p>\n//       <img src={recipe.Images[0]} alt={recipe.Name} style={{ width: '300px' }} />\n//       <h3>Ingredients</h3>\n//       <ul>\n//         {recipe.RecipeIngredientParts.map((ingredient, index) => (\n//           <li key={index}>\n//             {recipe.RecipeIngredientQuantities[index]} {ingredient}\n//           </li>\n//         ))}\n//       </ul>\n//       <h3>Instructions</h3>\n//       <ol>\n//         {recipe.RecipeInstructions.map((instruction, index) => (\n//           <li key={index}>{instruction}</li>\n//         ))}\n//       </ol>\n//       <button>Add to Meal Plan</button>\n//     </div>\n//   );\n// };\n\n// export default RecipeDetail;","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useHistory","DatePicker","Select","Modal","Button"],"sources":["/Users/uduthurishruthika/Desktop/SE03/meal-planning/meal-planning-frontend/src/components/RecipeDetail.js"],"sourcesContent":["// RecipeDetail.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { DatePicker, Select, Modal, Button } from 'antd';\n\n// const RecipeDetail = () => {\n//   const { id } = useParams(); // Get the recipe ID from the URL\n//   const [recipe, setRecipe] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchRecipe = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5001/api/recipes/${id}`); // Using the ObjectID in the request\n//         setRecipe(response.data); // Set the recipe data in state\n//       } catch (error) {\n//         console.error('Error fetching recipe:', error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRecipe();\n//   }, [id]);\n\n//   if (loading) return <div>Loading...</div>; // Show loading indicator while fetching\n\n//   if (!recipe) return <div>Recipe not found.</div>; // Handle case where recipe isn't found\n\n//   return (\n//     <div>\n//       <h1>{recipe.Name}</h1>\n//       <p><strong>Description:</strong> {recipe.Description}</p>\n//       <p><strong>Cook Time:</strong> {recipe.CookTime}</p>\n//       <p><strong>Prep Time:</strong> {recipe.PrepTime}</p>\n//       <p><strong>Total Time:</strong> {recipe.TotalTime}</p>\n//       <p><strong>Servings:</strong> {recipe.RecipeServings}</p>\n//       <p><strong>Calories:</strong> {recipe.Calories}</p>\n//       <img src={recipe.Images[0]} alt={recipe.Name} style={{ width: '300px' }} />\n//       <h3>Ingredients</h3>\n//       <ul>\n//         {recipe.RecipeIngredientParts.map((ingredient, index) => (\n//           <li key={index}>\n//             {recipe.RecipeIngredientQuantities[index]} {ingredient}\n//           </li>\n//         ))}\n//       </ul>\n//       <h3>Instructions</h3>\n//       <ol>\n//         {recipe.RecipeInstructions.map((instruction, index) => (\n//           <li key={index}>{instruction}</li>\n//         ))}\n//       </ol>\n//       <button>Add to Meal Plan</button>\n//     </div>\n//   );\n// };\n\n// export default RecipeDetail;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}